Happy Brain Chatbot - Jupyter Notebook/System Requirements

Here are the requirements for running mental_health_chatbot_happy_brain.ipynb on your system:

# Required libraries

accelerate
bert_score
datasets
evaluate
gradio
numpy
pandas
rouge_score
scikit-learn
torch
torchvision
tqdm
transformers

#Import section

import pandas as pd
# Data Handling
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MultiLabelBinarizer

# PyTorch & Transformers
import torch
import torch.nn.functional as F
from transformers import (
    AutoTokenizer,
    AutoModelForSequenceClassification,
    T5Tokenizer,
    T5ForConditionalGeneration,
    DataCollatorForSeq2Seq,
    TrainingArguments,
    Trainer
)

from torchvision.ops import nms

# Hugging Face Datasets & Evaluation

from datasets import load_dataset, Dataset, concatenate_datasets
from evaluate import load as load_metric

# External Evaluation Libraries

import bert_score
import rouge_score

# Gradio for UI

import gradio as gr

# Progress Bar

from tqdm.auto import tqdm

# Optional for advanced memory management (not required unless doing lazy loading)

from accelerate import init_empty_weights

If you have a GPU, use this (regardless, it'll fall back to cpu):

device = torch.device("cuda:0")
print("GPU Available:", torch.cuda.is_available())  # True if a GPU is accessible
print("Current Device Index:", torch.cuda.current_device())  # e.g., 0
print("Device Name:", torch.cuda.get_device_name(0))  # e.g., "NVIDIA GeForce RTX 3070"

# Example: set default tensor type to GPU-based FloatTensor (optional)
# This will make ALL newly created tensors go to GPU (Float32).
# torch.set_default_tensor_type(torch.cuda.FloatTensor) <- Note: Uncommenting causes downstream training functions to generate this error. (RuntimeError: Expected a 'cuda' device type for generator but found 'cpu')


Install PyTorch with CUDA Support:

pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu111

or,

conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia (I think this one works the best.)
